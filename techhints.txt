******************
radare r2

# this is @trufae (pancake) saying to use "custom" analysis. the aab does not work in my
# version but the axg still produces a list - maybe not valid? or expected?
I use to do custom analysis commands instead of the default automated ones. you can try with. 
e anal.hasnext=true;af;aab
axg
axg @main
aggv
aggv @main


******************
python

see search paths

python -m site

******************
laptop suspend with linux

system shuts down during lid close suspend:
Edit the file /etc/default/grub 
Change the line with:
GRUB_CMDLINE_LINUX=""
to GRUB_CMDLINE_LINUX="acpi_sleep=nonvs"
run update-grub

# from command line
systemctl suspend

*************

grep regx/regular expression to find ipv4 addresses:

grep "[12]\{0,1\}[0-9]\{0,1\}[0-9]\.[1-2]\{0,1\}[0-9]\{0,1\}[0-9]\.[1-2]\{0,1\}[0-9]\{0,1\}[0-9]\.[1-2]\{0,1\}[0-9]\{0,1\}[0-9]" secure* 

*************


dpkg and apt commands

By default, apt stores the .deb files in /var/cache/apt/archives. If you can't find them here, you or someone else or something else(a software like Ubuntu tweak) may have run a clean-up command like sudo apt-get clean to clear up the .deb files

dpkg -l  # to list all installed packages

apt-cache search foo # search available packages for "foo"

*******************************

use alternatives to set java version

update-alternatives --config java   # lets you set the version of java

# add new version of java+apps by hand ("11" param is priority):
for i in `ls /usr/lib/jvm/jdk-11/bin/`; do update-alternatives --install /usr/bin/$i /usr/lib/jvm/jdk-11/bin/$i 11; done

# then run same loop with --config $i to set the defaults to new versions

# show defines for java command:
update-alternatives --display java

***********

git

git init

# to set the editor
git config --global core.editor "vim"

git commit -m "blah blah blah"

git status

git log

git rm [file names]

# to fix out of sync:
git stash
git pull
git stash pop
# resolve conflicts in file(s)

source ~/.git-completion.bash
source ~/.git-prompt.sh

https://github.com/git/git/tree/master/contrib/completion

*****************************
bash filename manipulation examples

~% FILE="example.tar.gz"
~% echo "${FILE%%.*}"
example
~% echo "${FILE%.*}"
example.tar
~% echo "${FILE#*.}"
tar.gz
~% echo "${FILE##*.}"
gz

also, for chopping filename and path:

# dirname /etc/shadow
/etc
# basename /etc/shadow
shadow

# for i in {1..10}; do echo -n "$i " ; done
1 2 3 4 5 6 7 8 9 10 

***********************

# convert to a pem format
openssl pkcs7 -inform DER -print_certs -out cert.pem -in CERT.RSA

# print cert info:
keytool -printcert -file CERT.RSA

# once you have the cert.pem file you can get the public key by using the following command:
openssl x509 -in cert.pem -noout -text

# If you only want to get the part of public-key out of the CERT.RSA file, you can try out the following method:

# convert CERT.RSA to a standard pem file:
openssl pkcs7 -in CERT.RSA -inform DER -print_certs -out cert.pem

# get public key from the pem file:
openssl x509 -in cert.pem -pubkey -noout

# to compare public keys to see if they share a prime, use SageMath. see
# keyresolver.py in this repo. Any keys that output two numbers where one is not
# '1' then you have a common factor.

***********************


ssh pi@raspberrypi.home 'arecord -f cd -D plughw:1 | ffmpeg -ac 1 -i - -f ogg -' | mplayer - -idle -demuxer ogg # Baby monitor over ssh, making it more private/secure than those in stores. Replace plughw:1 with mic device from arecord -l output. Make it a script for easy access.

***********************
set up openvpn 

fwiw, on ubuntu:

sudo apt-get install network-manager-openvpn-gnome

sudo service NetworkManager restart

(see email sent to russ 10/3/2018 for files)
tar zxf md-router-udp-1194.tar.gz

from the network settings menu, add a vpn, import the config file from the above tarball (or which ever as appropriate), and add the specific user credentials
 

************************
airmon-ng
airmon-ng start [interface name]
airodump-ng wlan0mon
airodump-ng wlan0mon -c 6 # only channel 6
airodump-ng wlan0mon -c 6 --bssid aa:aa:aa:aa:ff:33 # only this ap on this channel
airodump-ng wlan0mon -c 6 --bssid aa:aa:aa:aa:ff:33 -w capture-file
aireplay-ng --deauth 100 -a [ap mac] wlan0mon
aircrack-ng -w words [cap file]

aircrack-ng will list out the APs in the cap file and, if wpa, will list num of handsakes; need 1
pipe it through tee [file] and select some random ap to capture text list of aps, then:
grep handshake foo1 | grep -v "0 handshake"

to find if there are any to crack

##############################

create qr code from text in clipboard on cmd line!!!

xclip -out -selection clipboard | qrencode -o - -t UTF8

##############################

cat /etc/passwd |toilet|lolcat

toilet asciifies bigly
lolcat colorizes ascii

##############################


service NetworkManager stop
ifconfig wlp1s0 down
iwconfig wlp1s0 mode monitor
ifconfig wlp1s0 up


iwconfig wlp1s0 mode managed
service NetworkManager restart


sudo tcpdump -i wlp1s0 -w filename not ether host b8:08:cf:32:be:6c

tshark -ni wlp1s0 -Y "bootp.option.type==53" -T fields -e bootp.option.hostname -e eth.src_resolved

wlan.fc.type_subtype == 0x0004
# to get SSID probe requests
##############################

Assignment
Assign value to variable if variable is not already set. Value will be returned.

Couple with : no-op if return value is to be discarded.	${variable="value"}
: ${variable="value"}

Removal

Delete shortest match of needle from front of haystack	${haystack#needle}
Delete longest match of needle from front of haystack	${haystack##needle}
Delete shortest match of needle from back of haystack	${haystack%needle}
Delete longest match of needle from back of haystack	${haystack%%needle}

Replacement

Replace first match of needle with replacement from haystack	${haystack/needle/replacement}
Replace all matches of needle with replacement from haystack	${haystack//needle/replacement}
If needle matches front of haystack replace with replacement	${haystack/#needle/replacement}
If needle matches back of haystack replace with replacement	${haystack/%needle/replacement}

Substitution

If variable not set, return value, else variable	${variable-value}
If variable not set or empty, return value, else variable	${variable:-value}
If variable set, return value, else null string	${variable+value}
If variable set and not empty, return value, else null string	${variable:+value}

Extraction

Extract length characters from variable starting at position	${variable:position:length}
String length of variable	${#variable}

##############################

display a set of lines from a file:
Assuming you need lines 20 to 40,

sed -n '20,40p;41q' file_name

or, for multiple sections, something like:
sed -n '5,8p;20,25p;26q' README.md

##############################

iptables

iptables -F -t raw
iptables -F -t mangle
iptables -F -t nat
iptables -F -t filter
iptables -F -t security

iptables -X -t table  # to delete all the user defined chains for the table; need to flush rules first

iptables -P INPUT ACCEPT|DROP    # set default
iptables -P FORWARD ACCEPT|DROP
iptables -P OUTPUT ACCEPT|DROP

clear and dump everything:
for t in raw mangle nat filter security; do iptables -F -t $t; iptables -X -t $t  ; echo -e "\n************* $t ************\n";iptables -L -t $t; done

---logging
       Kernel constant   Level value   Meaning
       KERN_EMERG             0        System is unusable
       KERN_ALERT             1        Action must be taken immediately
       KERN_CRIT              2        Critical conditions
       KERN_ERR               3        Error conditions
       KERN_WARNING           4        Warning conditions
       KERN_NOTICE            5        Normal but significant condition
       KERN_INFO              6        Informational
       KERN_DEBUG             7        Debug-level messages

<<<<<<< Updated upstream
##############################

containers

lxc init  # run the first time as regular user to set up stuff; not sure where it all goes

default (and non) settings I chose:

dac oss $ lxd init
Would you like to use LXD clustering? (yes/no) [default=no]: 
Do you want to configure a new storage pool? (yes/no) [default=yes]: 
Name of the new storage pool [default=default]: 
Name of the storage backend to use (btrfs, dir, lvm) [default=btrfs]: 
Create a new BTRFS pool? (yes/no) [default=yes]: 
Would you like to use an existing block device? (yes/no) [default=no]: 
Size in GB of the new loop device (1GB minimum) [default=90GB]: 5GB
Invalid input, try again.

Size in GB of the new loop device (1GB minimum) [default=90GB]: 5
Would you like to connect to a MAAS server? (yes/no) [default=no]: 
Would you like to create a new local network bridge? (yes/no) [default=yes]: 
What should the new bridge be called? [default=lxdbr0]: 
What IPv4 address should be used? (CIDR subnet notation, “auto” or “none”) [default=auto]: 
What IPv6 address should be used? (CIDR subnet notation, “auto” or “none”) [default=auto]: 
Would you like LXD to be available over the network? (yes/no) [default=no]: yes
Address to bind LXD to (not including port) [default=all]: 
Port to bind LXD to [default=8443]: 
Trust password for new clients: 
Again: 
Would you like stale cached images to be updated automatically? (yes/no) [default=yes] 
Would you like a YAML "lxd init" preseed to be printed? (yes/no) [default=no]: 

lxc list  # shows containers

lxc launch ubuntu:16.04   # start a container??? suggested from lxc list

dac oss $ lxc launch ubuntu:16.04
Creating the container
Container name is: amazed-lionfish            
Starting amazed-lionfish
dac oss $ lxc list
+-----------------+---------+-----------------------+-----------------------------------------------+------------+-----------+
|      NAME       |  STATE  |         IPV4          |                     IPV6                      |    TYPE    | SNAPSHOTS |
+-----------------+---------+-----------------------+-----------------------------------------------+------------+-----------+
| amazed-lionfish | RUNNING | 10.208.241.240 (eth0) | fd42:7d66:2c76:74a3:216:3eff:fea7:f1e8 (eth0) | PERSISTENT | 0         |
+-----------------+---------+-----------------------+-----------------------------------------------+------------+-----------+
dac oss $ 
dac oss $ lxc launch ubuntu:16.10 uber1610 -c security.idmap.isolated=true
Creating uber1610
Error: Failed container creation: Not enough uid/gid available for the container.
# should work; not sure why failed
https://www.youtube.com/watch?v=SvZK8LxEXSs&feature=youtu.be&t=1577

dac oss $ lxc stop many-gnat
dac oss $ lxc list
+-----------------+---------+-----------------------+-----------------------------------------------+------------+-----------+
|      NAME       |  STATE  |         IPV4          |                     IPV6                      |    TYPE    | SNAPSHOTS |
+-----------------+---------+-----------------------+-----------------------------------------------+------------+-----------+
| amazed-lionfish | RUNNING | 10.208.241.240 (eth0) | fd42:7d66:2c76:74a3:216:3eff:fea7:f1e8 (eth0) | PERSISTENT | 0         |
+-----------------+---------+-----------------------+-----------------------------------------------+------------+-----------+
| many-gnat       | STOPPED |                       |                                               | PERSISTENT | 0         |
+-----------------+---------+-----------------------+-----------------------------------------------+------------+-----------+
dac oss $ 
dac oss $ lxc launch ubuntu:16.10 many-gnat2 -c security.privileged=true
Creating many-gnat2
Starting many-gnat2
dac oss $ lxc list
+-----------------+---------+-----------------------+-----------------------------------------------+------------+-----------+
|      NAME       |  STATE  |         IPV4          |                     IPV6                      |    TYPE    | SNAPSHOTS |
+-----------------+---------+-----------------------+-----------------------------------------------+------------+-----------+
| amazed-lionfish | RUNNING | 10.208.241.240 (eth0) | fd42:7d66:2c76:74a3:216:3eff:fea7:f1e8 (eth0) | PERSISTENT | 0         |
+-----------------+---------+-----------------------+-----------------------------------------------+------------+-----------+
| many-gnat       | STOPPED |                       |                                               | PERSISTENT | 0         |
+-----------------+---------+-----------------------+-----------------------------------------------+------------+-----------+
| many-gnat2      | RUNNING |                       | fd42:7d66:2c76:74a3:216:3eff:fe94:1246 (eth0) | PERSISTENT | 0         |
+-----------------+---------+-----------------------+-----------------------------------------------+------------+-----------+


**************************
android toolchain

dac 45558 $ ~/Android/Sdk/ndk-bundle/build/tools/make_standalone_toolchain.py --arch aarch64 --api 21 --install-dir /home/dac/bin/android-toolchain.21
usage: make_standalone_toolchain.py [-h] --arch
                                    {arm,arm64,mips,mips64,x86,x86_64}
                                    [--api API]
                                    [--stl {gnustl,libc++,stlport}] [--force]
                                    [-v]
                                    [--package-dir PACKAGE_DIR | --install-dir INSTALL_DIR]
make_standalone_toolchain.py: error: argument --arch: invalid choice: 'aarch64' (choose from 'arm', 'arm64', 'mips', 'mips64', 'x86', 'x86_64')
dac 45558 $ ~/Android/Sdk/ndk-bundle/build/tools/make_standalone_toolchain.py --arch x86 --api 21 --install-dir /home/dac/bin/android-toolchain.21.x86
dac 45558 $ ~/Android/Sdk/ndk-bundle/build/tools/make_standalone_toolchain.py --arch arm64 --api 21 --install-dir /home/dac/bin/android-toolchain.21.aarch64

